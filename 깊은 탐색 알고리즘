graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

def dfs(graph, start_node):
    visited = []  # 방문한 노드를 저장할 리스트
    stack = [start_node]  # 스택에 시작 노드를 추가

    while stack:  # 스택이 비어있지 않은 동안 반복
        node = stack.pop()  # 스택의 마지막 노드를 꺼냄
        if node not in visited:  # 해당 노드를 방문하지 않았다면
            visited.append(node)  # 방문한 노드로 추가
            stack.extend(graph[node])  # 인접 노드를 스택에 추가 (순서대로 추가됨)

    return visited  # 방문한 노드를 반환

# DFS 호출
visited_nodes = dfs(graph, 'A')
print("DFS 방문 순서:", visited_nodes)
